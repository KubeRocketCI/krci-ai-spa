{
  "agents": [
    {
      "id": "aqa-v1",
      "filename": "aqa",
      "name": "Ali Assure",
      "role": "Senior Automation QA Engineer",
      "description": "Automation QA engineer for testing/quality assurance. Redirects implementation‚Üídev, requirements‚ÜíPM/PO, architecture‚Üíarchitect agents.",
      "goal": "Ensure product quality through testing within Automation QA scope",
      "icon": "üß™",
      "categories": ["Testing"],
      "scope": "Testing/quality assurance + reviews for testability",
      "whenToUse": "Create test plans, automate testing, or ensure quality standards",
      "commandCount": 5,
      "taskCount": 4,
      "commands": {
        "chat": "(Default) Quality assurance consultation and guidance",
        "generate": "üéØ MAIN: Analyze existing scenarios and generate Gherkin test scenarios from Stories by executing task generate-auto-test-cases.md",
        "setup-testing": "Initialize testing workspace: create src/main/resources/README.md and features structure via wizard by executing task setup-testing.md",
        "onboard-testing": "Onboard existing Gherkin suite: analyze features and generate README by executing task onboard-testing.md",
        "edit-testing-settings": "Edit testing settings (src/main/resources/README.md) interactively (add/edit/guided) by executing task edit-testing-settings.md"
      },
      "version": "1.0.0"
    },
    {
      "id": "prm-v1",
      "filename": "prm",
      "name": "Alice Project Manager",
      "role": "Senior Project Manager",
      "description": "Project manager specializing in strategic planning, execution, and project delivery across the full lifecycle",
      "goal": "Ensure project success through structured planning, proactive risk management, clear documentation, and strong stakeholder alignment",
      "icon": "üéØ",
      "categories": ["Project Management"],
      "scope": "",
      "whenToUse": "Plan projects, coordinate teams, or manage deliverables",
      "commandCount": 11,
      "taskCount": 10,
      "commands": {
        "chat": "(Default) Project management consultation and guidance",
        "create-project-charter": "Create project charter by executing task create-project-charter",
        "update-project-charter": "Update existing project charter by executing task update-project-charter",
        "create-sow": "Create scope of work by executing task create-sow",
        "update-sow": "Update existing scope of work by executing task update-sow",
        "create-project-plan": "Create project plan by executing task create-project-plan",
        "update-project-plan": "Update existing project plan by executing task update-project-plan",
        "create-risk-register": "Create risk register by executing task create-risk-register",
        "update-risk-register": "Update existing risk register by executing task update-risk-register",
        "create-status-report": "Create project status report by executing task create-status-report",
        "update-status-report": "Update existing status report by executing task update-status-report"
      },
      "version": "1.0.0"
    },
    {
      "id": "ba-v1",
      "filename": "ba",
      "name": "Anna Analyst",
      "role": "Senior Business Analyst",
      "description": "Business analyst for requirements/processes/analysis. Redirects implementation‚Üídev, architecture‚Üíarchitect, strategy‚ÜíPM agents.",
      "goal": "Bridge business needs through analysis within BA scope",
      "icon": "üìä",
      "categories": ["Analysis"],
      "scope": "Requirements/process analysis only",
      "whenToUse": "Gather requirements, analyze business processes, or document user journeys",
      "commandCount": 5,
      "taskCount": 4,
      "commands": {
        "chat": "(Default) Business analysis consultation and guidance",
        "gather": "Systematically gather and document business requirements",
        "analyze": "Analyze business processes and identify improvement opportunities",
        "map": "Create comprehensive user journey maps and experience flows",
        "document": "Document business rules and logic comprehensively"
      },
      "version": "1.0.0"
    },
    {
      "id": "architect-v1",
      "filename": "architect",
      "name": "Archie Tect",
      "role": "Senior Software Architect",
      "description": "Software architect for system design/architecture. Redirects implementation‚Üídev, requirements‚ÜíPM/BA, marketing‚ÜíPMM agents.",
      "goal": "Design system architectures within architect scope",
      "icon": "üèõÔ∏è",
      "categories": ["Architecture"],
      "scope": "System design/architecture + reviews for technical feasibility",
      "whenToUse": "Design system architecture, define technical patterns, or review designs",
      "commandCount": 5,
      "taskCount": 4,
      "commands": {
        "chat": "(Default) Architectural consultation and guidance",
        "create-sad": "Create a Software Architecture Document (SAD) for the system",
        "update-sad": "Update an existing Software Architecture Document (SAD)",
        "review-sad": "Review and provide feedback on a Software Architecture Document (SAD)",
        "review-story": "Review and provide feedback on a user story"
      },
      "version": "1.0.0"
    },
    {
      "id": "developer-v1",
      "filename": "dev",
      "name": "Devon Coder",
      "role": "Software Developer",
      "description": "Software developer for code implementation/debugging. Redirects requirements‚ÜíPM/PO, architecture‚Üíarchitect, marketing‚ÜíPMM agents.",
      "goal": "Implement clean, efficient code within dev scope",
      "icon": "üíª",
      "categories": ["Development"],
      "scope": "Code implementation/testing + reviews for technical clarity",
      "whenToUse": "Implement features, review code, or debug technical issues",
      "commandCount": 4,
      "taskCount": 3,
      "commands": {
        "chat": "(Default) Development consultation and code assistance",
        "review": "Review story technical requirements",
        "plan-implementation": "Execute task plan-story-implementation",
        "implement": "Implement new features"
      },
      "version": "1.0.0"
    },
    {
      "id": "advisor-v1",
      "filename": "advisor",
      "name": "Framework Advisor",
      "role": "KubeRocketAI Framework Consultant",
      "description": "Helps users create, review, and improve KubeRocketAI framework components following established patterns and standards",
      "goal": "Guide users through framework component creation, validation, and maintenance using established patterns",
      "icon": "üéØ",
      "categories": ["Framework Core"],
      "scope": "Framework component creation, validation, and maintenance",
      "whenToUse": "Create or review agents, tasks, templates, or validate framework compliance",
      "commandCount": 9,
      "taskCount": 8,
      "commands": {
        "chat": "(Default) Framework consultation and guidance",
        "create-task": "Create new framework-compliant task with proper XML guidance and structure",
        "review-task": "Review existing task for framework compliance and provide improvement recommendations",
        "create-agent": "Create new framework-compliant agent with schema validation and critical principles",
        "review-agent": "Review existing agent for schema compliance and framework pattern adherence",
        "create-template": "Create new template with variable system and LLM guidance integration",
        "review-template": "Review existing template for variable consistency and processing effectiveness",
        "create-data": "Create new data file with appropriate format and framework integration",
        "validate-framework": "Execute comprehensive framework validation and provide remediation guidance"
      },
      "version": "1.0.0"
    },
    {
      "id": "go-developer-v1",
      "filename": "go-dev",
      "name": "Golan Gopher",
      "role": "Go Developer",
      "description": "Go developer for Go code implementation/debugging. Redirects requirements‚ÜíPM/PO, architecture‚Üíarchitect, other languages‚Üídev agents.",
      "goal": "Implement clean, efficient Go code within Go dev scope",
      "icon": "üíª",
      "categories": ["Development"],
      "scope": "Go code implementation + Go code reviews",
      "whenToUse": "Implement Go applications, review Go code, or build Kubernetes resources",
      "commandCount": 3,
      "taskCount": 2,
      "commands": {
        "chat": "(Default) Development consultation and code assistance",
        "implement-new-cr": "Implement Kubernetes Custom Resource",
        "review-code": "Review code for best practices"
      },
      "version": "1.0.0"
    },
    {
      "id": "pmm-v1",
      "filename": "pmm",
      "name": "Madison Marketer",
      "role": "Senior Product Marketing Manager",
      "description": "Product marketing manager for GTM/marketing/sales materials. Redirects implementation‚Üídev, architecture‚Üíarchitect, requirements‚ÜíPM agents.",
      "goal": "Create high-impact marketing materials within PMM scope",
      "icon": "üöÄ",
      "categories": ["Marketing"],
      "scope": "Marketing/GTM/sales materials only",
      "whenToUse": "Manage product strategy, coordinate development, or track deliverables",
      "commandCount": 7,
      "taskCount": 6,
      "commands": {
        "chat": "(Default) Product marketing consultation using Pain-Gains-Reveals, PAS, BAB, and SCRAP frameworks",
        "create-marketing-brief": "Create comprehensive go-to-market strategy foundation by executing task create-marketing-brief",
        "create-pitch-deck": "Create compelling presentation using optimal framework (Pain-Gains-Reveals/PAS/BAB/SCRAP) by executing task create-pitch-deck",
        "create-launch-materials": "Develop complete product launch campaign with emotional connection by executing task create-launch-materials",
        "create-sales-enablement": "Build sales team resources with STAR method proof points by executing task create-sales-enablement",
        "create-visual-identity": "Design brand guidelines and visual assets with quantifiable impact by executing task create-visual-identity",
        "create-demo-script": "Develop engaging product demonstration script with customer emotion focus by executing task create-demo-script"
      },
      "version": "1.0.0"
    },
    {
      "id": "pm-v1",
      "filename": "pm",
      "name": "Peter Manager",
      "role": "Senior Product Manager",
      "description": "Product manager for strategy/PRDs/roadmaps. Redirects implementation‚Üídev, architecture‚Üíarchitect, stories‚ÜíPO agents.",
      "goal": "Drive product success through strategic planning within PM scope",
      "icon": "üìà",
      "categories": ["Product"],
      "scope": "Strategy/PRD/roadmap creation only",
      "whenToUse": "Manage product strategy, coordinate development, or track deliverables",
      "commandCount": 14,
      "taskCount": 13,
      "commands": {
        "chat": "(Default) Product management consultation and guidance",
        "create-project-brief": "Create project brief using standard workflow (2-3 pages, business framework based)",
        "create-project-brief-advanced": "Create project brief using advanced validation flow (evidence-based, comprehensive validation)",
        "enhance-project-brief": "Upgrade existing standard brief to advanced validation flow",
        "update-project-brief": "Update existing project brief by executing task update-project-brief",
        "gather-context": "Collect structured project inputs using business frameworks by executing task gather-project-context",
        "validate-problem": "Validate problem statement using Lean Startup Problem-Solution Fit framework",
        "validate-users": "Validate target users using Jobs-to-be-Done framework",
        "validate-metrics": "Validate success metrics using SMART criteria and OKR alignment framework",
        "validate-value": "Validate business value using Value Proposition Canvas framework",
        "refine-brief": "Incorporate validation feedback and update project brief sections",
        "finalize-brief": "Complete project brief when all validations are satisfied",
        "create-prd": "Create comprehensive product requirements document by executing task create-prd",
        "update-prd": "Update existing product requirements document by executing task update-prd"
      },
      "version": "1.0.0"
    },
    {
      "id": "po-v1",
      "filename": "po",
      "name": "Pole",
      "role": "Senior Product Owner",
      "description": "Product owner for epics/stories/backlog. Redirects implementation‚Üídev, architecture‚Üíarchitect, PRDs‚ÜíPM agents.",
      "goal": "Create well-defined user stories within PO scope",
      "icon": "üìã",
      "categories": ["Product"],
      "scope": "Epic/story/backlog management only",
      "whenToUse": "Define product requirements, prioritize features, or manage backlog",
      "commandCount": 6,
      "taskCount": 5,
      "commands": {
        "chat": "(Default) Product owner consultation and story guidance",
        "create-epic": "Execute task create-epic",
        "update-epic": "Execute task update-epic",
        "create-story": "Execute task create-story",
        "update-story": "Execute task update-story",
        "review-story": "Execute task review-story"
      },
      "version": "1.0.0"
    },
    {
      "id": "qa-v1",
      "filename": "qa",
      "name": "Quinn Assure",
      "role": "Senior QA Engineer",
      "description": "QA engineer for testing/quality assurance. Redirects implementation‚Üídev, requirements‚ÜíPM/PO, architecture‚Üíarchitect agents.",
      "goal": "Ensure product quality through testing within QA scope",
      "icon": "üß™",
      "categories": ["Testing"],
      "scope": "Testing/quality assurance + reviews for testability",
      "whenToUse": "Create test plans, automate testing, or ensure quality standards",
      "commandCount": 6,
      "taskCount": 4,
      "commands": {
        "chat": "(Default) Quality assurance consultation and guidance",
        "plan": "Create comprehensive test plan and strategy",
        "generate": "Generate detailed test cases and scenarios",
        "execute": "Execute testing procedures and workflows",
        "report": "Create defect reports and quality assessments",
        "review-story": "Review and provide feedback on a user story"
      },
      "version": "1.0.0"
    },
    {
      "id": "tw-v1",
      "filename": "tw",
      "name": "Taker Rider",
      "role": "Technical Writer",
      "description": "Technical writer specializing in creating/editing media artifacts",
      "goal": "Consultation users on creating/editing media artifacts",
      "icon": "üìù",
      "categories": ["Documentation"],
      "scope": "Technical writing + documentation",
      "whenToUse": "Create documentation, write technical content, or improve clarity",
      "commandCount": 3,
      "taskCount": 2,
      "commands": {
        "chat": "(Default) Technical writer consultation and guidance and creating/editing media artifacts",
        "doc-review": "Review and improve documentation pages",
        "ppt-review": "Review and improve PowerPoint presentations"
      },
      "version": "1.0.0"
    }
  ],
  "metadata": {
    "totalAgents": 12,
    "categories": [
      "Analysis",
      "Architecture",
      "Development",
      "Documentation",
      "Framework Core",
      "Marketing",
      "Product",
      "Project Management",
      "Testing"
    ],
    "generatedAt": "2025-09-23T16:58:53.970344Z",
    "version": "1.0.0"
  }
}
